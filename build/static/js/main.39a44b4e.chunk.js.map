{"version":3,"sources":["components/VideoCard/VideoCard.js","contexts/videoContext.jsx","pages/listing-page/ListingPage.js","service/videpApi.js","components/Navbar/Navbar.jsx","contexts/authContext.jsx","service/loginApi.js","pages/login-signup-page/login-page.jsx","components/Hero/Hero.jsx","pages/home page/HomePage.js","service/signupApi.js","pages/login-signup-page/signup-page.jsx","App.js","backend/utils/authUtils.js","backend/controllers/AuthController.js","backend/controllers/HistoryController.js","backend/controllers/VideoController.js","backend/db/videos.js","backend/db/categories.js","backend/controllers/CategoryController.js","backend/controllers/LikeController.js","backend/controllers/PlaylistController.js","backend/db/users.js","backend/controllers/WatchLaterController.js","server.js","index.js"],"names":["VideoCard","_ref","videoItem","react_default","a","createElement","className","src","alt","loading","title","description","creator","href","url","VideoContext","createContext","VideoProvider","children","_useReducer","useReducer","vidReducer","initialVidState","_useReducer2","Object","slicedToArray","currVidState","vidDispatch","Provider","value","state","action","type","objectSpread","allVideos","payload","ListingPage","videoInfo","link","_useState","useState","_useState2","setVideoInfo","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","status","data","videos","t0","console","log","stop","apply","this","arguments","getData","useFetch","_useVideos","useContext","react","class","map","vidItem","VideoCard_VideoCard","SidebarData","path","cName","Navbar","sidebar","setSidebar","showSidebar","react_router_dom","to","Menu_default","onClick","item","index","key","placeholder","authContext","useAuth","authReducer","encodedToken","token","isLoggedIn","user","initialAuthState","localStorage","getItem","AuthProvider","authState","authDispatch","login","userDetails","apiResponse","username","error","post","concat","foundUser","firstName","lastName","abrupt","_x","LoginPage","navigate","useNavigate","location","useLocation","email","setEmail","_useState3","_useState4","password","setPassword","userLogin","e","responseData","preventDefault","setItem","replace","for","onChange","target","Hero","defaultOptions","loop","autoplay","animationData","animation","rendererSettings","preserveAspectRatio","dist_default","options","height","width","HomePage","Hero_Hero","signupHandler","userInfo","createdUser","SignupPage","userSignup","App","Navbar_Navbar","react_router","element","HomePage_HomePage","ListingPage_ListingPage","requiresAuth","request","requestHeaders","authorization","decodedToken","jwt_decode","process","db","users","findBy","Response","errors","formatDate","dayjs","format","sign","require","schema","_JSON$parse","JSON","parse","requestBody","rest","objectWithoutProperties","_id","uuid","newUser","createdAt","updatedAt","likes","history","playlists","watchlater","create","loginHandler","_JSON$parse2","undefined","getHistoryVideosHandler","call","addVideoToHistoryHandler","video","some","id","push","removeVideoFromHistoryHandler","videoId","params","filteredHistory","filter","update","clearHistoryHandler","getAllVideosHandler","getVideoHandler","attrs","categories","categoryName","getAllCategoriesHandler","getCategoryHandler","categoryId","category","getLikedVideosHandler","addItemToLikedVideos","removeItemFromLikedVideos","filteredLikes","getAllPlaylistsHandler","addNewPlaylistHandler","playlist","removePlaylistHandler","playlistId","filteredPlaylists","getVideosFromPlaylistHandler","find","addVideoToPlaylistHandler","removeVideoFromPlaylistHandler","filteredVideos","getWatchLaterVideosHandler","addItemToWatchLaterVideos","removeItemFromWatchLaterVideos","_ref$environment","length","environment","Server","serializers","application","RestSerializer","models","Model","like","seeds","server","logging","forEach","routes","namespace","bind","delete","makeServer","ReactDOM","render","StrictMode","authContext_AuthProvider","videoContext_VideoProvider","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.39a44b4e.chunk.js","sourcesContent":["import  React  from 'react';\nimport \"./VideoCard.css\"\nexport function VideoCard({videoItem}) {\n  return(\n    <div className=\"photo-card-container text-on-picture\">\n        <div className=\"basic-card-container\">\n          <img\n            className=\"card-photo\"\n            src={videoItem.src}\n            alt=\"Crypto\"\n            loading=\"lazy\"\n          />\n          <div className=\"card-heading\">{videoItem.title}</div>\n          <div className=\"card-body\">\n            {videoItem.description}\n          </div>\n          <div className=\"card-footer\">\n            <div className=\"text-butons\">\n              <button className=\"btn wo-outline\">{videoItem.creator}</button>\n              <a href={videoItem.url}><button className=\"btn wo-outline\">Play Video</button></a>\n            </div>\n            <div className=\"icons-buttons\">\n              <button className=\"btn icon\">\n                <i className=\"fa fa-heart\"></i>\n              </button>\n              <button className=\"btn icon\">\n                <i className=\"fa fa-share\"></i>\n              </button>\n              <button className=\"btn icon\">\n                <i className=\"fa fa-bars\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}","import  React  from 'react';\nimport { createContext, useContext } from 'react';\nimport { useReducer } from 'react';\n\nconst VideoContext = createContext({});\nconst useVideos = () => useContext(VideoContext);\n\nconst VideoProvider = ({ children }) => {\n    const [currVidState, vidDispatch] = useReducer(\n        vidReducer,\n        initialVidState\n    );\n    return (\n        <VideoContext.Provider value = {{currVidState, vidDispatch}}>\n            {children}  \n        </VideoContext.Provider>    \n    );\n};\n\nconst vidReducer = (state, action) => {\n    switch(action.type){\n        case \"SHOW_VIDEOS\":\n            return { ...state, allVideos: action.payload };\n\n        default:\n            return { ...state};\n    }\n};\n\nconst initialVidState = { allVideos : [], }\n\nexport { VideoProvider, useVideos }","\nimport { React } from 'react';\nimport \"./ListingPage.css\"\nimport { VideoCard } from \"../../components/VideoCard/VideoCard.js\"\nimport { useEffect } from \"react\";\nimport { useFetch } from \"../../service/videpApi.js\";\nimport { useVideos } from \"../../contexts/videoContext.jsx\";\nexport const ListingPage = () => {\n  const {videoInfo} = useFetch(\"/api/videos\")\n  const {currVidState, vidDispatch} = useVideos();\n  const {allVideos} = currVidState;\n  useEffect(() => {\n    vidDispatch({type: \"SHOW_VIDEOS\", payload: videoInfo});\n  }, [videoInfo, vidDispatch]);\n  return (\n    <div class=\"listing-page-container\">\n      {allVideos.map((vidItem) =><VideoCard videoItem = {vidItem} />)}\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (link) =>{\n    const [videoInfo, setVideoInfo] = useState([]);\n    useEffect(\n        () => \n        {\n            const getData = async () => {\n                try{\n                    const response = await axios.get(link);\n                    if(response.status === 200){\n                        setVideoInfo(response.data.videos);\n                    }\n                } catch (error){\n                    console.log(\"Error occured \" + error)\n                }\n            };\n            getData();\n        }, [link]);\n    return {videoInfo,};\n}\n\nexport { useFetch };","import React, { useState } from \"react\";\nimport \"./Navbar.css\"\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { Link } from 'react-router-dom'\nconst SidebarData = [\n    {\n        title: 'Home',\n        path: '/',\n        cName: 'nav-text'\n    },\n    {\n        title: 'Liked videos',\n        path: '/likedVidPage',\n        cName: 'nav-text'\n    },\n    {\n        title: 'Watch Later',\n        path: '/watchLater',\n        cName: 'nav-text'\n    }\n]\nexport function Navbar(){\n    const [sidebar, setSidebar] = useState(false);\n    const showSidebar = () =>{\n        setSidebar(!sidebar)\n    }\n    return(\n        <div className=\"nav-container\">\n            <div className=\"menu-items\">\n                <ul className=\"menu-items\">\n                    <Link to = \"#\"><li className=\"list-item-left\"><MenuIcon onClick ={showSidebar} /></li></Link>\n                    <nav className = { sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n                        <ul className=\"nav-menu-items\">\n                            <li className = \"navbar-toggle\">\n                                <Link to = \"#\" className=\"menu-bars\" onClick={showSidebar} >\n                                    Close\n                                </Link>\n                            </li>\n                            {SidebarData.map((item, index) => {\n                                return (\n                                    <li key ={index} className={item.cName}>\n                                        <Link to ={item.path} className=\"nav-text-link\">\n                                            {item.title}\n                                        </Link>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </nav>\n                    <li className=\"list-item-left\"><a href =\"/\" className=\"logo-link\">\n                        <div className=\"logo\">Animedio</div>\n            </a></li>\n                </ul>\n            </div>\n            \n            \n            <div className=\"serch-bar\">\n                <input className=\"nav-input\" type=\"text\" placeholder=\"Search\" />\n            </div>\n            <div className=\"menu-items\">\n                <ul className=\"menu-items\">\n                    <li className=\"list-item\"><a className=\"menu-link\" href =\"/login\">Login</a></li>\n                </ul>\n            </div>\n        </div>\n    )\n}","import  React  from 'react';\nimport { useContext, createContext, useReducer } from \"react\";\n\nconst authContext = createContext();\n\nconst useAuth = () => useContext(authContext);\n\nconst authReducer = (state, action) => {\n    switch(action.type){\n        case \"LOADING\" :\n            return {\n                ...state,\n                loading : true\n            }\n        case \"LOGIN\" :\n            return {\n                ...state,\n                loading : false,\n                encodedToken : action.token,\n                isLoggedIn : true,\n                user : action.user,\n            }\n            case \"SIGNUP\" :\n                return{\n                    ...state,\n                    loading: false,\n                }\n        default :\n        return { ...state };\n    }\n};\n\nconst initialAuthState = {\n    loading : false,\n    encodedToken : localStorage.getItem(\"encodedToken\") ? localStorage.getItem(\"encodedToken\") : \"\",\n    isLoggedIn : localStorage.getItem(\"encodedToken\") ? true : false,\n    user : \"\",\n}\n\nconst AuthProvider = ({children}) => {\n    const [authState, authDispatch] = useReducer(authReducer, initialAuthState);\n    return (\n        <authContext.Provider value = {{authState, authDispatch}}>\n            {children}\n        </authContext.Provider>\n    )\n}\n\nexport { useAuth, AuthProvider}\n\n","import axios from \"axios\";\n\nconst login = async(userDetails) => {\n    const apiResponse = { token : \"\", username : \"\", error : \"\" };\n    try{\n        let response;\n        response = await axios.post(\"/api/auth/login\", userDetails);\n\n        if(response.status === 200){\n            apiResponse.token = response.data.encodedToken;\n            apiResponse.username = `${response.data.foundUser.firstName} ${response.data.foundUser.lastName}`;\n        }\n    } catch (err){\n        console.log(err);\n    }\n    return apiResponse;\n}\nexport { login }","import  React  from \"react\";\nimport { useState } from \"react\";\nimport { Link, useNavigate, useLocation} from \"react-router-dom\"\nimport { useAuth } from \"../../contexts/authContext\";\nimport { login } from \"../../service/loginApi\";\nimport \"./login-page.css\";\n\nexport default function LoginPage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { authDispatch} = useAuth();\n  // const { loading } = authState;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const defaultLogin = (e) => {\n    e.preventDefault();\n    setEmail(\"adarshbalika@gmail.com\");\n    setPassword(\"adarshBalika123\");\n  };\n  const userLogin = async (e) => {\n    e.preventDefault();\n    if(email && password){\n      authDispatch({type : \"LOADING\"});\n      const responseData = await login({\n        email: email,\n        password: password,\n      });\n      const { token, username, error} = responseData;\n      if(error){\n        console.log(\"Error occured\");\n      } else{\n        authDispatch({\n          type: \"LOGIN\",\n          token: token,\n          user: username,\n        });\n        localStorage.setItem(\"encodedToken\", token);\n        localStorage.setItem(\"user\", username);\n        navigate(location || \"/\", {replace: true});\n        // .state?.from?.pathname\n      }\n    }\n  };\n  return (\n    <div className=\"main-container\">\n      <div className=\"content-container\">\n        <div className=\"login-container\">\n          <div className=\"login-elements\">\n            <div className=\"login-hero\">Login</div>\n            <button className=\"button\" onClick={defaultLogin}>Login with default</button>\n            <div className=\"login email\">\n              <label for=\"text\">Email address</label>\n              <input \n              type=\"email\" \n              placeholder=\"Enter your email\"\n              class=\"password-block\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}/>\n            </div>\n            <div className=\"login password\">\n              <label for=\"text\">Password</label>\n              <input \n              class=\"password-block\"\n              type=\"password\" \n              placeholder=\"*****\"\n              value ={password}\n              onChange={(e) => setPassword(e.target.value)}/>\n            </div>\n            <div className = \"login details\">\n              <div className = \"remember-check\">\n                <input type = \"checkbox\" />\n                <label for = \"checkbox\">Remember Me</label>\n              </div>\n              <button className = \"button secondary forgot-password\" href=\"#\">\n                Forgot your password?\n              </button>\n            </div>\n            <div className = \"buttons\">\n              <button className = \"button\" onClick = {userLogin}>Login</button>\n              <button className = \"button\"><Link className=\"links\" to = \"/signup\">\n                Create New Account{\" \"}\n              </Link>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import  React  from 'react';\nimport Lottie from \"react-lottie\"\nimport \"./Hero.css\"\nimport animation from \"../../lottie-hero.json\"\nexport function Hero() {\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: animation,\n        rendererSettings: {\n           preserveAspectRatio: \"xMidYMid slice\",\n        },\n     };\n    return (\n        <div className=\"hero-content-area\" >\n            \n            <div className=\"lottie-hero-container\">\n                <Lottie options = {defaultOptions} height = {500} width ={500} ></Lottie>\n            </div>\n            <text className=\"hero-heading-lottie\">Immerse yourself in the world of Anime</text>\n            <div className=\"hero-buttons\">\n                <div className=\"watch-button\">\n                    <a href =\"./listing\"><button className =\"hero-button\">Watch Now</button></a>\n                </div>\n                <div className=\"watch-button\">\n                <a href =\"./login\"><button className =\"hero-button\">Login</button></a>\n                </div>\n            </div>                \n        </div>\n    )\n}","import  React  from 'react';\nimport { Hero } from \"../../components/Hero/Hero\"\nexport const HomePage = () => {\n    return(\n        <Hero />\n    )\n}","import axios from \"axios\";\nconst signupHandler = async(userInfo) => {\n    const apiResponse = {token: \"\", username : \"\", error: \"\"}\n    try{\n        let response;\n        response = await axios.post(\"/api/auth/signup\", userInfo);\n        if(response.status === 201){\n            console.log(\"Account created\")\n            apiResponse.token = response.data.encodedToken;\n            console.log(apiResponse.token);\n            apiResponse.username = `${response.data.createdUser.firstName} ${response.data.createdUser.lastName}`;\n        }\n    } catch (err){\n        apiResponse.error = \"Account already exists\" + err;\n    }\n    return apiResponse;\n};\nexport { signupHandler }","import  React  from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { signupHandler } from \"../../service/signupApi\";\nimport { useAuth} from \"../../contexts/authContext\";\nimport \"./login-page.css\";\n\nexport default function SignupPage() {\n  const navigate = useNavigate();\n  const {authDispatch} = useAuth();\n  // const [ userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  \n  const userSignup = async (e) => {\n    e.preventDefault();\n    if( email && password){\n      const responseData = await signupHandler({\n        email: email,\n        password: password,\n      });\n\n      const { error } = responseData;\n      if(error){\n        console.log(error)\n      } else{\n        authDispatch({\n          type: \"SIGNUP\",\n        });\n        navigate(\"/login\", {replace: true});\n      }\n    }\n  };\n\n  return (\n    <div class=\"main-container\">\n      <div class=\"content-container\">\n        <div class=\"login-container\">\n          <div class=\"login-elements\">\n            <div class=\"login-hero\">Sign Up</div>\n            <div class=\"login email\">\n              <label for=\"text\">Email address</label>\n              <input \n              type=\"text\" \n              placeholder=\"aqsa@gmail.com\"\n              value={email}\n              onChange={(e) =>{\n                setEmail(e.target.value);\n              }} />\n            </div>\n            <div class=\"login password\">\n              <label for=\"text\">Password</label>\n              <input \n              type=\"password\" \n              placeholder=\"*****\" \n              value={password}\n              class = \"password-block\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}/>\n            </div>\n            <div class=\"login details\">I accept all terms and Conditions</div>\n            <div class=\"buttons\">\n              <button class=\"button button-primary\"onClick={userSignup}>Create New Account</button>\n              <br />\n              <Link class=\"button button-secondary\" to=\"/login\">\n                Already have an account?\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\r\nimport \"./App.css\"\r\nimport { ListingPage } from \"./pages/listing-page/ListingPage\"\r\nimport {Navbar} from \"./components/Navbar/Navbar\"\r\nimport  LoginPage  from './pages/login-signup-page/login-page'\r\nimport { HomePage } from './pages/home page/HomePage'\r\nimport SignupPage from './pages/login-signup-page/signup-page'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route path =\"/\" element ={<HomePage />}/>\r\n          <Route path = \"/listing\" element={<ListingPage/>}/>    \r\n          <Route path = \"/login\" element={<LoginPage />}/>\r\n          <Route path = \"/signup\" element = {<SignupPage/>} />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Response } from \"miragejs\";\r\nimport dayjs from \"dayjs\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const requiresAuth = function (request) {\r\n  const encodedToken = request.requestHeaders.authorization;\r\n  const decodedToken = jwt_decode(\r\n    encodedToken,\r\n    process.env.REACT_APP_JWT_SECRET\r\n  );\r\n  if (decodedToken) {\r\n    const user = this.db.users.findBy({ email: decodedToken.email });\r\n    return user;\r\n  }\r\n  return new Response(\r\n    401,\r\n    {},\r\n    { errors: [\"The token is invalid. Unauthorized access error.\"] }\r\n  );\r\n};\r\n\r\nexport const formatDate = () => dayjs().format(\"YYYY-MM-DDTHH:mm:ssZ\");\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { Response } from \"miragejs\";\r\nimport { formatDate } from \"../utils/authUtils\";\r\nconst sign = require(\"jwt-encode\");\r\n/**\r\n * All the routes related to Auth are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles user signups.\r\n * send POST Request at /api/auth/signup\r\n * body contains {firstName, lastName, email, password}\r\n * */\r\n\r\nexport const signupHandler = function (schema, request) {\r\n  const { email, password, ...rest } = JSON.parse(request.requestBody);\r\n  try {\r\n    // check if email already exists\r\n    const foundUser = schema.users.findBy({ email });\r\n    if (foundUser) {\r\n      return new Response(\r\n        422,\r\n        {},\r\n        {\r\n          errors: [\"Unprocessable Entity. Email Already Exists.\"],\r\n        }\r\n      );\r\n    }\r\n    const _id = uuid();\r\n    const newUser = {\r\n      _id,\r\n      email,\r\n      password,\r\n      createdAt: formatDate(),\r\n      updatedAt: formatDate(),\r\n      ...rest,\r\n      likes: [],\r\n      history: [],\r\n      playlists: [],\r\n      watchlater: [],\r\n    };\r\n    const createdUser = schema.users.create(newUser);\r\n    const encodedToken = sign({ _id, email }, process.env.REACT_APP_JWT_SECRET);\r\n    return new Response(201, {}, { createdUser, encodedToken });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles user login.\r\n * send POST Request at /api/auth/login\r\n * body contains {email, password}\r\n * */\r\n\r\nexport const loginHandler = function (schema, request) {\r\n  const { email, password } = JSON.parse(request.requestBody);\r\n  try {\r\n    const foundUser = schema.users.findBy({ email });\r\n    if (!foundUser) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        { errors: [\"The email you entered is not Registered. Not Found error\"] }\r\n      );\r\n    }\r\n    if (password === foundUser.password) {\r\n      const encodedToken = sign(\r\n        { _id: foundUser._id, email },\r\n        process.env.REACT_APP_JWT_SECRET\r\n      );\r\n      foundUser.password = undefined;\r\n      return new Response(200, {}, { foundUser, encodedToken });\r\n    }\r\n    return new Response(\r\n      401,\r\n      {},\r\n      {\r\n        errors: [\r\n          \"The credentials you entered are invalid. Unauthorized access error.\",\r\n        ],\r\n      }\r\n    );\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n","import { Response } from \"miragejs\";\r\nimport { requiresAuth } from \"../utils/authUtils\";\r\n\r\n/**\r\n * All the routes related to User History are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting videos from user's history.\r\n * send GET Request at /api/user/history\r\n * */\r\nexport const getHistoryVideosHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    return new Response(200, {}, { history: user.history });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles adding videos to user's history.\r\n * send POST Request at /api/user/history\r\n * body contains {video}\r\n * */\r\n\r\nexport const addVideoToHistoryHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    const { video } = JSON.parse(request.requestBody);\r\n    if (user.history.some((item) => item.id === video.id)) {\r\n      return new Response(\r\n        409,\r\n        {},\r\n        {\r\n          errors: [\"The video is already in your history\"],\r\n        }\r\n      );\r\n    }\r\n    user.history.push(video);\r\n    return new Response(201, {}, { history: user.history });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's history.\r\n * send DELETE Request at /api/user/history/:videoId\r\n * */\r\n\r\nexport const removeVideoFromHistoryHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    const videoId = request.params.videoId;\r\n    const filteredHistory = user.history.filter((item) => item._id !== videoId);\r\n    this.db.users.update({ history: filteredHistory });\r\n    return new Response(200, {}, { history: filteredHistory });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's history.\r\n * send DELETE Request at /api/user/history/all\r\n * */\r\n\r\nexport const clearHistoryHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    this.db.users.update({ history: [] });\r\n    return new Response(200, {}, { history: [] });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n","import { Response } from \"miragejs\";\r\n\r\n/**\r\n * All the routes related to Videos are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles gets all videos in the db.\r\n * send GET Request at /api/videos\r\n * */\r\n\r\nexport const getAllVideosHandler = function () {\r\n  try {\r\n    return new Response(200, {}, { videos: this.db.videos });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles uploads a new video to the db.\r\n * send POST Request at /api/user/videos/\r\n * */\r\n\r\n// TODO: postVideoHandler\r\n\r\n/**\r\n * This handler handles gets all videos in the db.\r\n * send GET Request at /api/user/videos/:videoId\r\n * */\r\n\r\nexport const getVideoHandler = function (schema, request) {\r\n  const { videoId } = request.params;\r\n  try {\r\n    const video = schema.videos.findBy({ _id: videoId }).attrs;\r\n    return new Response(200, {}, { video });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n","/**\n * Videos Database can be added here.\n * You can add videos of your wish with different attributes\n * */\nimport { v4 as uuid} from \"uuid\"\n\nexport const videos = [\n  {\n    _id: {uuid},\n    src : \"https://i.ytimg.com/vi/8f2QCkQIKEg/default.jpg\",\n    title: \"What are They Doing in Anime\",\n    description:\n      \"Anime characters doing hilarious stupid things\",\n    creator: \"BlueTi Anime\",\n    url: \"https://www.youtube.com/watch?v=8f2QCkQIKEg\",\n  },\n  {\n    _id: {uuid},\n    src : \"https://i.ytimg.com/vi/eZv8If_fUdI/default.jpg\",\n    title: \"Best New Spring 2022 Anime\",\n    description:\n      \"Let's go through some of the best new anime of spring 2022\",\n    creator: \"ViniiTube\",\n    url: \"https://www.youtube.com/watch?v=eZv8If_fUdI\",\n  },\n  {\n    _id: {uuid},\n    src : \"https://i.ytimg.com/vi/Y9P1EhndE0w/default.jpg\",\n    title: \"Top 5 Naruto Fights\",\n    description:\n      \"Summoning all fans! Celebrating 20 years of Naruto’s way of the Shinobi. Here’s a compilation of the 5 most unforgettable fights from the show. Naruto, now streaming on Netflix.\",\n    creator: \"netflix India\",\n    url: \"https://www.youtube.com/watch?v=Y9P1EhndE0w\",\n  },\n];\n","import { v4 as uuid } from \"uuid\";\n\n/**\n * Category Database can be added here.\n * You can add category of your wish with different attributes\n * */\n\nexport const categories = [\n  {\n    _id: uuid(),\n    categoryName: \"Computer Programming\",\n    description:\n      \"Computer programming is the process of designing and building an executable computer program to accomplish a specific computing\",\n  },\n  {\n    _id: uuid(),\n    categoryName: \"Frontend Development\",\n    description:\n      \"Front-end web development, also known as client-side development is the practice of producing HTML, CSS and JavaScript for a website or Web Application\",\n  },\n  {\n    _id: uuid(),\n    categoryName: \"Backend Development\",\n    description:\n      \"Backend Development is also known as server-side development. It is everything that the users don't see and contains behind-the-scenes activities that occur when performing any action on a website.\",\n  },\n];\n","import { Response } from \"miragejs\";\r\n/**\r\n * All the routes related to Category are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/categories\r\n * */\r\n\r\nexport const getAllCategoriesHandler = function () {\r\n  try {\r\n    return new Response(200, {}, { categories: this.db.categories });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/user/category/:categoryId\r\n * */\r\n\r\nexport const getCategoryHandler = function (schema, request) {\r\n  const { categoryId } = request.params;\r\n  try {\r\n    const category = schema.categories.findBy({ _id: categoryId }).attrs;\r\n    return new Response(200, {}, { category });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n","import { Response } from \"miragejs\";\r\nimport { requiresAuth } from \"../utils/authUtils\";\r\n\r\n/**\r\n * All the routes related to Liked Videos are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting videos from user's likes.\r\n * send GET Request at /api/user/likes\r\n * */\r\nexport const getLikedVideosHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    return new Response(200, {}, { likes: user.likes });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles adding videos to user's likes.\r\n * send POST Request at /api/user/likes\r\n * body contains {video}\r\n * */\r\n\r\nexport const addItemToLikedVideos = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const { video } = JSON.parse(request.requestBody);\r\n    if (user.likes.some((item) => item.id === video.id)) {\r\n      return new Response(\r\n        409,\r\n        {},\r\n        {\r\n          errors: [\"The video is already in your liked videos\"],\r\n        }\r\n      );\r\n    }\r\n    user.likes.push(video);\r\n    return new Response(201, {}, { likes: user.likes });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    {\r\n      errors: [\"The email you entered is not Registered. Not Found error\"],\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's likes.\r\n * send DELETE Request at /api/user/likes/:videoId\r\n * */\r\n\r\nexport const removeItemFromLikedVideos = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const videoId = request.params.videoId;\r\n    const filteredLikes = user.likes.filter((item) => item._id !== videoId);\r\n    this.db.users.update({ likes: filteredLikes });\r\n    return new Response(200, {}, { likes: filteredLikes });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n","import { Response } from \"miragejs\";\r\nimport { requiresAuth } from \"../utils/authUtils\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n/**\r\n * All the routes related to User Playlists are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting all user's playlists.\r\n * send GET Request at /api/user/playlist\r\n * */\r\nexport const getAllPlaylistsHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    return new Response(200, {}, { playlists: user.playlists });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles adding playlist to user's playlists.\r\n * send POST Request at /api/user/playlists\r\n * body contains {playlist: {title: \"foo\", description:\"bar bar bar\" }}\r\n * */\r\n\r\nexport const addNewPlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const { playlist } = JSON.parse(request.requestBody);\r\n    user.playlists.push({ ...playlist, videos: [], _id: uuid() });\r\n    return new Response(201, {}, { playlists: user.playlists });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    {\r\n      errors: [\"The email you entered is not Registered. Not Found error\"],\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's playlists.\r\n * send DELETE Request at /api/user/playlists/:playlistId\r\n * */\r\n\r\nexport const removePlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const playlistId = request.params.playlistId;\r\n    const filteredPlaylists = user.playlists.filter(\r\n      (item) => item._id !== playlistId\r\n    );\r\n    this.db.users.update({ playlists: filteredPlaylists });\r\n    return new Response(200, {}, { playlists: filteredPlaylists });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles getting videos from user's playlist.\r\n * send GET Request at /api/user/playlists/:playlistId\r\n * */\r\n\r\nexport const getVideosFromPlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const playlistId = request.params.playlistId;\r\n    const playlist = user.playlists.find((item) => item._id !== playlistId);\r\n    return new Response(200, {}, { playlist });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles adding videos from user's playlist.\r\n * send POST Request at /api/user/playlists/:playlistId\r\n * body contains {video}\r\n * */\r\n\r\nexport const addVideoToPlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const playlistId = request.params.playlistId;\r\n    const { video } = JSON.parse(request.requestBody);\r\n    const playlist = user.playlists.find((item) => item._id === playlistId);\r\n    if (playlist.videos.some((item) => item.id === video.id)) {\r\n      return new Response(\r\n        409,\r\n        {},\r\n        {\r\n          errors: [\"The video is already in your playlist\"],\r\n        }\r\n      );\r\n    }\r\n    playlist.videos.push(video);\r\n    return new Response(201, {}, { playlist });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's playlist.\r\n * send DELETE Request at /api/user/playlists/:playlistId/:videoId\r\n * */\r\n\r\nexport const removeVideoFromPlaylistHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const playlistId = request.params.playlistId;\r\n    const videoId = request.params.videoId;\r\n    let playlist = user.playlists.find((item) => item._id === playlistId);\r\n    const filteredVideos = playlist.videos.filter(\r\n      (item) => item._id !== videoId\r\n    );\r\n    playlist.videos = filteredVideos;\r\n    return new Response(200, {}, { playlist });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { formatDate } from \"../utils/authUtils\";\r\n/**\r\n * User Database can be added here.\r\n * You can add default users of your wish with different attributes\r\n * Every user will have likes (Likes are set to 0 by default), History Array, Playlists Array (added Watch Later Playlist in it by default) by default\r\n * */\r\n\r\nexport const users = [\r\n  {\r\n    _id: uuid(),\r\n    firstName: \"Adarsh\",\r\n    lastName: \"Balika\",\r\n    email: \"adarshbalika@gmail.com\",\r\n    password: \"adarshBalika123\",\r\n    createdAt: formatDate(),\r\n    updatedAt: formatDate(),\r\n  },\r\n];\r\n","import { Response } from \"miragejs\";\r\nimport { requiresAuth } from \"../utils/authUtils\";\r\n\r\n/**\r\n * All the routes related to Watch Later Videos are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting videos from user's watchlater playlist.\r\n * send GET Request at /api/user/watchlater\r\n * */\r\n\r\nexport const getWatchLaterVideosHandler = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  try {\r\n    if (!user) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    return new Response(200, {}, { watchlater: user.watchlater });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles adding videos to user's watchlater playlist.\r\n * send POST Request at /api/user/watchlater\r\n * body contains {video}\r\n * */\r\n\r\nexport const addItemToWatchLaterVideos = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const { video } = JSON.parse(request.requestBody);\r\n    if (user.watchlater.some((item) => item.id === video.id)) {\r\n      return new Response(\r\n        409,\r\n        {},\r\n        {\r\n          errors: [\"The video is already in your watch later videos\"],\r\n        }\r\n      );\r\n    }\r\n    user.watchlater.push(video);\r\n    return new Response(201, {}, { watchlater: user.watchlater });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    {\r\n      errors: [\"The email you entered is not Registered. Not Found error\"],\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * This handler handles removing videos from user's watchlater playlist.\r\n * send DELETE Request at /api/user/watchlater/:videoId\r\n * */\r\n\r\nexport const removeItemFromWatchLaterVideos = function (schema, request) {\r\n  const user = requiresAuth.call(this, request);\r\n  if (user) {\r\n    const videoId = request.params.videoId;\r\n    const filteredVideos = user.watchlater.filter(\r\n      (item) => item._id !== videoId\r\n    );\r\n    this.db.users.update({ watchlater: filteredVideos });\r\n    return new Response(200, {}, { watchlater: filteredVideos });\r\n  }\r\n  return new Response(\r\n    404,\r\n    {},\r\n    { errors: [\"The user you request does not exist. Not Found error.\"] }\r\n  );\r\n};\r\n","import { Server, Model, RestSerializer } from \"miragejs\";\r\nimport {\r\n  loginHandler,\r\n  signupHandler,\r\n} from \"./backend/controllers/AuthController\";\r\nimport {\r\n  getHistoryVideosHandler,\r\n  addVideoToHistoryHandler,\r\n  removeVideoFromHistoryHandler,\r\n  clearHistoryHandler,\r\n} from \"./backend/controllers/HistoryController\";\r\nimport {\r\n  getAllVideosHandler,\r\n  getVideoHandler,\r\n} from \"./backend/controllers/VideoController\";\r\nimport { videos } from \"./backend/db/videos\";\r\nimport { categories } from \"./backend/db/categories\";\r\nimport {\r\n  getAllCategoriesHandler,\r\n  getCategoryHandler,\r\n} from \"./backend/controllers/CategoryController\";\r\nimport {\r\n  getLikedVideosHandler,\r\n  addItemToLikedVideos,\r\n  removeItemFromLikedVideos,\r\n} from \"./backend/controllers/LikeController\";\r\nimport {\r\n  getAllPlaylistsHandler,\r\n  addNewPlaylistHandler,\r\n  removePlaylistHandler,\r\n  getVideosFromPlaylistHandler,\r\n  addVideoToPlaylistHandler,\r\n  removeVideoFromPlaylistHandler,\r\n} from \"./backend/controllers/PlaylistController\";\r\nimport { users } from \"./backend/db/users\";\r\nimport {\r\n  addItemToWatchLaterVideos,\r\n  getWatchLaterVideosHandler,\r\n  removeItemFromWatchLaterVideos,\r\n} from \"./backend/controllers/WatchLaterController\";\r\nexport function makeServer({ environment = \"development\" } = {}) {\r\n  return new Server({\r\n    serializers: {\r\n      application: RestSerializer,\r\n    },\r\n    environment,\r\n    // TODO: Use Relationships to have named relational Data\r\n    models: {\r\n      video: Model,\r\n      category: Model,\r\n      user: Model,\r\n      like: Model,\r\n      history: Model,\r\n      playlist: Model,\r\n      watchlater: Model,\r\n    },\r\n\r\n    // Runs on the start of the server\r\n    seeds(server) {\r\n      server.logging = false;\r\n      videos.forEach((item) => {\r\n        server.create(\"video\", { ...item });\r\n      });\r\n      categories.forEach((item) => server.create(\"category\", { ...item }));\r\n      users.forEach((item) =>\r\n        server.create(\"user\", {\r\n          ...item,\r\n          likes: [],\r\n          watchlater: [],\r\n          history: [],\r\n          playlists: [],\r\n        })\r\n      );\r\n    },\r\n\r\n    routes() {\r\n      this.namespace = \"api\";\r\n      // auth routes (public)\r\n      this.post(\"/auth/signup\", signupHandler.bind(this));\r\n      this.post(\"/auth/login\", loginHandler.bind(this));\r\n\r\n      // video routes (public)\r\n      this.get(\"/videos\", getAllVideosHandler.bind(this));\r\n      this.get(\"video/:videoId\", getVideoHandler.bind(this));\r\n\r\n      // TODO: POST VIDEO TO DB\r\n\r\n      // categories routes (public)\r\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\r\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\r\n\r\n      // likes routes (private)\r\n      this.get(\"/user/likes\", getLikedVideosHandler.bind(this));\r\n      this.post(\"/user/likes\", addItemToLikedVideos.bind(this));\r\n      this.delete(\"/user/likes/:videoId\", removeItemFromLikedVideos.bind(this));\r\n\r\n      // watch later routes (private)\r\n      this.get(\"/user/watchlater\", getWatchLaterVideosHandler.bind(this));\r\n      this.post(\"/user/watchlater\", addItemToWatchLaterVideos.bind(this));\r\n      this.delete(\r\n        \"/user/watchlater/:videoId\",\r\n        removeItemFromWatchLaterVideos.bind(this)\r\n      );\r\n\r\n      // playlist routes (private)\r\n      this.get(\"/user/playlists\", getAllPlaylistsHandler.bind(this));\r\n      this.post(\"/user/playlists\", addNewPlaylistHandler.bind(this));\r\n      this.delete(\r\n        \"/user/playlists/:playlistId\",\r\n        removePlaylistHandler.bind(this)\r\n      );\r\n\r\n      this.get(\r\n        \"/user/playlists/:playlistId\",\r\n        getVideosFromPlaylistHandler.bind(this)\r\n      );\r\n      this.post(\r\n        \"/user/playlists/:playlistId\",\r\n        addVideoToPlaylistHandler.bind(this)\r\n      );\r\n      this.delete(\r\n        \"/user/playlists/:playlistId/:videoId\",\r\n        removeVideoFromPlaylistHandler.bind(this)\r\n      );\r\n\r\n      // history routes (private)\r\n      this.get(\"/user/history\", getHistoryVideosHandler.bind(this));\r\n      this.post(\"/user/history\", addVideoToHistoryHandler.bind(this));\r\n      this.delete(\r\n        \"/user/history/:videoId\",\r\n        removeVideoFromHistoryHandler.bind(this)\r\n      );\r\n      this.delete(\"/user/history/all\", clearHistoryHandler.bind(this));\r\n    },\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { makeServer } from \"./server\";\r\nimport { VideoProvider} from \"./contexts/videoContext.jsx\"\r\nimport { AuthProvider } from \"./contexts/authContext.jsx\"\r\n\r\n// Call make Server\r\nmakeServer();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <VideoProvider>\r\n        <App />\r\n      </VideoProvider>\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}